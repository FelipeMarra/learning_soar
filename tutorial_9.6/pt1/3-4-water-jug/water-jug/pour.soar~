#water-jug*propose*pour
#If the task is water-jug and there is a jug that is not full and the other jug is not empty
#then propose pouring water from the second jug into the first jug
sp{water-jug*propose*pour
   (state <s> ^name water-jug
              ^jug <i>
              ^jug { <j> <> <i>})
   (<i> ^contents > 0)
   (<j> ^empty > 0)
-->
   (<s> ^operator <o> + =)
   (<o> ^name pour
        ^empty-jug <i>
        ^pour-jug <j>)
}

#water-jug*apply*pour*will-empty-empty-jug
#If the task is water-jug and the pour operator is selected,
#   and the contents of the jug being emptied are less than or equal to
#   the empty amount of the jug being filled,
#then set the contents of the jug being emptied to 0;
#     set the contents of the jug being filled to the sum of the two jugs
sp{water-jug*apply*pour*will-empty-empty-jug
   (state <s> ^name water-jug
              ^operator <o>)
   (<o> ^name pour
        ^empty-jug <i>
        ^fill-jug <j>)
   (<j> ^volume <jvol>
        ^contents <jcon>
        ^empty <jempty>)
   (<i> ^volume <ivol>
        ^contents {<icon> <= <jempty>})
-->
   (<i> ^contents 0
        ^contents <icon> -)
   (<j> ^contents (+ <jcon> <icon>)
        ^contents <jcon> -)
}

#water-jug*apply*pour*will-not-empty-empty-jug
#If the task is water-jug and the pour operator is selected, and
#   the contents of the jug being emptied are greater than the empty amount
#   of the jug being filled,
#then set the contents of the jug being emptied to its contents minus the 
#     empty of the jug being filled;
#     set the contents of the jug filled to its volume
sp{water-jug*apply*pour*will-not-empty-empty-jug
      (state <s> ^name water-jug
              ^operator <o>)
   (<o> ^name pour
        ^empty-jug <i>
        ^fill-jug <j>)
   (<i> ^volume <ivol>
      contents {<icon> > <jempty>})

   (<i> ^volume <ivol>
        ^contents {<icon> > <jempty>})
-->
   (<i> ^contents (- <ivol> <jempty>)
        ^contents <icon> -)
   (<j> ^contents <jvol>
        ^contents <jcon> -)
}

#water-jug*apply*operator*record*last-operator*pour
#If the task is water-jug and the pour operator is selected, then create an
#augmentation of the state (last-operator) with the name of the operator and a 
#copy of the augmentations augmentation
#sp{water-jug*apply*operator*record*last-opeartor*pour
#   (state <s> ^name water-jug
#              ^operator <o>)
#   (<o> ^name pour
#        ^fill-jug <fj>
#        ^empty-jug <ej>)
#-->
#   (<s> ^last-operator <last-op>)
#   (<last-op> ^name pour
#              ^fill-jug <fj>
#              ^empty-jug <ej>)
#}

#water-jug*apply*operator*remove*old*last-operator*pour
#If the task is water-jug and a pour operator is selected and last-operator
#does not have the same name and fill-jug, then remove the last-operator
#sp{water-jug*apply*operator*remove*last-operator*pour
#   (state <s> ^name water-jug
#              ^operator <o>
#              ^last-operator <last-op>)
#   (<o> ^name pour
#        ^fill-jug <fj>
#        ^empty-jug <ej>)
#  -(<last-op> ^name pour
#              ^fill-jug <fj>
#              ^empty-jug <ej>)
#-->
#   (<s> ^last-operator <last-op> -)
#}
